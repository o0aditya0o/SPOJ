/* -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.
 * Created By : Aditya Agarwal
 * IT, MNNIT-ALLAHABAD 
 * aditya.mnnit15@gmail.com
 _._._._._._._._._._._._._._._._._._._._._.*/


#include<bits/stdc++.h>
using namespace std;

#define MP make_pair
#define pb push_back
#define rep(i,n) for(int i=0;i<n;i++)
#define REP(i,a,b) for(int i=a;i<=b;i++)
#define PER(i,a,b) for(int i=b;i>=a;i--)
#define X first
#define Y second

 //i/o
#define inp(n) scanf("%d",&n)
#define inpl(n) scanf("%lld",&n)
#define inp2(n,m) inp(n), inp(m)
#define inp2l(n,m) inpl(n), inpl(m)


//cost
#define MOD 1000000007
#define MOD_INV 1000000006
#define MAX 100009
#define INF 999999999
#define mp make_pair
typedef long long ll;
typedef pair< pair<ll,ll>,ll > pairs;
int p[21][21],dp[21][21],n,m;

int dy(int x,int y){
	if(x==n-1 && y==m-1)
		return 0;
	if(dp[x][y]==0 && y<m-1 && x<n-1)
		dp[x][y]=min(dy(x+1,y)+p[x+1][y],dy(x,y+1)+p[x][y+1]);
	else if(dp[x][y]==0 && x<n-1)
		dp[x][y]=dy(x+1,y)+p[x+1][y];
	else if(dp[x][y]==0 && y<m-1)
		dp[x][y]=dy(x,y+1)+p[x][y+1];
	return dp[x][y];
}

int main(){
	inp2(n,m);
	int x,y;
	inp2(x,y);
	rep(i,n){
		rep(j,m){
			inp(p[i][j]);
		}
	}
	int ans=dy(x-1,y-1);
	if(p[x-1][y-1]-ans>=0)
		printf("Y %d\n",p[x-1][y-1]-ans);
	else
		printf("N\n");
	return 0;
}
